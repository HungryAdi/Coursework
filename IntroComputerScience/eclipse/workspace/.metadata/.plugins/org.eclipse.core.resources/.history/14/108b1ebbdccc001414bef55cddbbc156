
public class IMSorting
{
	int ARRAY_SIZE=21;
	int[] array = new int[ARRAY_SIZE];
	
	public IMSorting() {
		for (int i=0; i<ARRAY_SIZE; i++) {
			int j = (int) (Math.random()*100);
			array[i]=j;
		}
	}

	
	public void print (String header) {
		System.out.println(header);
		for (int i=0; i<ARRAY_SIZE; i++) {
			System.out.print(array[i]+" ");
		}
		System.out.println();
	}
	
	public void doInsertionSort() {
		for (int i = 0; i < this.array.length; i++) {
			int current = this.array[i];
			int lastSwappedIndex=-1;
			for (int j=i; j> 0; j--) {
				if (array[j-1]>current) {
					array[j] = array[j-1];
					lastSwappedIndex=(j-1);
				} else {
					break;
				}
			}
			if (lastSwappedIndex>0) {
				array[lastSwappedIndex]=current;				
			}
		}
	}
	
	
	public void doMergeSort() {
		
	}
	
	
	
	
	
	public static void main(String[] args) {
		
		IMSorting imsorting = new IMSorting();
		imsorting.print("=== before ===");
		imsorting.doInsertionSort();
		imsorting.print("=== after insertion sort ===");
		
		System.out.println();
		imsorting = new IMSorting();
		imsorting.print("=== before ===");
		imsorting.doMergeSort();
		imsorting.print("=== after merge sort ===");
		
	}
}
